<?xml version="1.0" ?>
<launch>
  <arg name="robot_ip"               default="192.168.2.55"/>
  <arg name="load_gripper"           default="true" />
  <arg name="use_interactive_marker" default="false" />
  <arg name="use_gripper_gui"        default="true" />
  <arg name="load_franka_control"    default="true" />
  <arg name="kinestethic"            default="false" />
  <arg name="rviz"                   default="true" />


  <!-- Bringup franka_interactive_bringup.laucnh -->
  <group if="$(arg load_franka_control)">
    <include file="$(find franka_interactive_controllers)/launch/franka_interactive_bringup_minimal.launch" >
      <arg name="robot_ip" value="$(arg robot_ip)" />
      <arg name="load_gripper" value="$(arg load_gripper)" />
      <arg name="use_gripper_gui" value="$(arg use_gripper_gui)" />
      <arg name="bringup_rviz" value="$(arg rviz)" />
    </include>
  </group>

  <!-- Load desired controller-->
  <node  name="controller_spawner_gravity" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="joint_gravity_compensation_controller --stopped"/>
  <rosparam ns="joint_gravity_compensation_controller" command="load" file="$(find franka_interactive_controllers)/config/impedance_control_additional_params.yaml"/>

  <!-- Load desired controller-->
  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="effort_joint_trajectory_controller"/>
  <rosparam  ns="cartesian_pose_impedance_controller" command="load" file="$(find franka_interactive_controllers)/config/pose_impedance_control_additional_params.yaml"/>

  <arg name="node_name_gripper_control"        default="gripper_control_default" />
  <arg name="config_gripper_control"          default="$(find franka_interactive_controllers)/config/$(arg node_name_gripper_control).yaml" />
  <node name="$(arg node_name_gripper_control)" pkg="franka_interactive_controllers" type="gripper_control_from_topic.py" output="screen" clear_params="true">
  </node>




<!--   <node name="move_to_start" pkg="franka_interactive_controllers" type="move_to_start_joints.py" output="screen" required="true" /> -->

  <!-- IF interactive marker= true: Use interactive marker to define desired pose for impedance (stiffness + damping compensation) controller 
  <group if="$(arg use_interactive_marker)">
    <node name="interactive_marker" pkg="franka_interactive_controllers" type="interactive_marker.py" required="true" output="screen">
      <param name="link_name" value="panda_link0" />
      <remap from="desired_pose" to="/cartesian_impedance_controller/desired_pose" />
    </node>
  </group> -->

</launch>
