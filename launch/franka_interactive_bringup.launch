<?xml version="1.0" ?>
<launch>
  <arg name="robot_ip"            default="192.168.1.35"/>
  <arg name="load_gripper"        default="true" />
  <arg name="use_gripper_gui"     default="true" />
  <arg name="controller"          default="cartesian_pose_impedance_controller"   doc="Which controller should be started? (One of {cartesian_pose, cartesian_twist, passiveDS}_impedance_controller )" />
  <arg name="bringup_rviz"        default="true" />
  <arg name="load_franka_control" default="true" />

  <!-- optitrack node args -->
  <arg name="host_ip" default="192.168.106" />
	<arg name="host_port" default="1511" />
	<arg name="output" default="screen" />
	<arg name="use_2d" default="false" />
	<arg name="publish_unidentified" default="false" />
	<arg name="plane_height" default="0.0" />



  <!-- Bringup franka_interactive_bringup.launch and gravity compensation controller!-->
  <group if="$(arg load_franka_control)">
    <!-- Loads robot control interface -->
    <include file="$(find franka_interactive_controllers)/launch/franka_control_interactive.launch" >
      <arg name="robot_ip" value="$(arg robot_ip)" />
      <arg name="load_gripper" value="$(arg load_gripper)" />
    </include>

    <!-- Start only if cartesian_pose_impedance_controller is set in "controller"-->
    <include file="$(find franka_interactive_controllers)/launch/cartesian_pose_impedance_controller.launch" 
      if="$(eval arg('controller') == 'cartesian_pose_impedance')">
    </include>

    <!-- Start only if cartesian_twist_impedance_controller is set in "controller"-->
    <include file="$(find franka_interactive_controllers)/launch/cartesian_twist_impedance_controller.launch" if="$(eval arg('controller') == 'cartesian_twist_impedance')">
    </include>
	

    <!-- Start only if passive_ds_impedance_controller is set in "controller"
    <include file="$(find franka_interactive_controllers)/launch/passiveDS_impedance_controller.launch" if="$(eval arg('controller') == 'passiveDS_impedance')">
      <arg name="params_yaml_file" value="$(find mit_museum_inspection_demo)/config/museum_passiveDS_impedance_control_additional_params.yaml"/>
    </include>-->
  </group>



  <group if="$(arg bringup_rviz)">
    <!-- Convert franka state of EE to Geometry Message PoseStamped!! -->  
    <node name="franka_to_geometry_messages" pkg="franka_interactive_controllers" type="franka_to_geometry_messages.py" respawn="false" output="screen"/>

    <!-- Bring up rqt_reconfigure to modify values -->
    <node name="rqt_reconfigure" pkg="rqt_reconfigure" type="rqt_reconfigure" required="false" />

    <!-- Bring up gripper GUI to control gripper from code -->  
    <node if="$(arg use_gripper_gui)" name="franka_gui_gripper_run" pkg="franka_interactive_controllers" type="franka_gui_gripper_run.py" respawn="false" output="screen"/>

    <!-- Bring up rviz configuration -->
    <node  pkg="rviz" type="rviz" output="screen" name="rviz" args="-d $(find franka_interactive_controllers)/launch/rviz/franka_description.rviz" if="$(arg bringup_rviz)"/>
    
   
   
    <!-- optitrack node -->
    <node name="optitrack_node" pkg="optitrack_bridge" type="optitrack_node" respawn="true"
        output="$(arg output)">
      <param name="host_ip" type="string" value="$(arg host_ip)"/>
      <param name="host_port" type="int" value="$(arg host_port)"/>
      <param name="publish_unidentified" type="bool" value="$(arg publish_unidentified)"/>
      <param name="use_2d" type="bool" value="$(arg use_2d)"/>
      <param name="plane_height" value="$(arg plane_height)"/>
    </node>
    <!-- calibration of optitrack -->
    <node pkg="tf" type="static_transform_publisher" name="optitrack_base_link" args="0.14190 0.66504 0.03553 -0.00205 -0.00190 -0.70667 0.70754 /panda_link0 /world 100"/>
  </group>

</launch>
